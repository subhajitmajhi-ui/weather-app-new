{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\weather-today\\\\src\\\\components\\\\pages\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport Context from '../../Context';\nimport withLayout from '../hoc/withLayout';\nimport Error from './Error';\nimport SearchLocation from './SearchLocation';\nimport WeatherInfo from './WeatherInfo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const [weather, setWeather] = useState();\n  const [error, setError] = useState();\n  const [lat, setLat] = useState(0);\n  const [long, setLong] = useState(0);\n  const [cLocationData, setCLocationData] = useState(''); // useEffect(()=>{\n  //   const fetchData = async() => {\n  //     navigator.geolocation.getCurrentPosition(function(position){\n  //       setLat(position.coords.latitude);\n  //       setLong(position.coords.longitude);\n  //     })\n  //     // console.log(\"Latitude is:\", lat)\n  //     // console.log(\"Longitude is:\", long)\n  //   }  \n  //   const currentaURL = `${process.env.REACT_APP_WEATHER_API_URL}/weather?lat=${lat}&lon=${long}&appid=${process.env.REACT_APP_WEATHER_API_KEY}&units=metric`;\n  //   await fetch(currentaURL)\n  //   .then(res=> res.json())\n  //   .then(result =>{\n  //     setCLocationData(result);\n  //     console.log(result)\n  //   })\n  //   fetchData();\n  // },[lat, long])\n\n  useEffect(() => {\n    const fetchData = async () => {\n      navigator.geolocation.getCurrentPosition(function (position) {\n        setLat(position.coords.latitude);\n        setLong(position.coords.longitude);\n      });\n      await fetch(`${process.env.REACT_APP_WEATHER_API_URL}/weather?lat=${lat}&lon=${long}&appid=${process.env.REACT_APP_WEATHER_API_KEY}&units=metric`).then(res => res.json()).then(result => {\n        setCLocationData(result); // console.log(result);\n      });\n    };\n\n    fetchData();\n  }, [lat, long]); // console.log(cLocationData)\n\n  const api_call = async e => {\n    e.preventDefault();\n    const location = e.target.elements.location.value;\n\n    if (!location) {\n      return setError(\"Please enter a correct location Name\"), setWeather(null);\n    }\n\n    const baseUrl = `${process.env.REACT_APP_WEATHER_API_URL}/weather?q=${location}&appid=${process.env.REACT_APP_WEATHER_API_KEY}&units=metric`;\n    const request = axios.get(baseUrl);\n    const responce = await request;\n    setWeather(responce.data);\n    e.target.elements.location.value = '';\n  }; // console.log(weather.main.temp)\n  // console.log(cLocationData.main.temp)\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Context.Provider, {\n      value: {\n        api_call,\n        weather,\n        cLocationData\n      },\n      children: [error && /*#__PURE__*/_jsxDEV(Error, {\n        error: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(SearchLocation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(WeatherInfo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Home, \"e18sPUN4HAcp89pxp5DGYTeFn3Y=\");\n\n_c = Home;\nexport default _c2 = withLayout(Home);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Home\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["axios","React","useEffect","useState","Context","withLayout","Error","SearchLocation","WeatherInfo","Home","weather","setWeather","error","setError","lat","setLat","long","setLong","cLocationData","setCLocationData","fetchData","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","fetch","process","env","REACT_APP_WEATHER_API_URL","REACT_APP_WEATHER_API_KEY","then","res","json","result","api_call","e","preventDefault","location","target","elements","value","baseUrl","request","get","responce","data"],"sources":["D:/React/weather-today/src/components/pages/Home.js"],"sourcesContent":["import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react'\r\nimport Context from '../../Context';\r\nimport withLayout from '../hoc/withLayout'\r\nimport Error from './Error';\r\nimport SearchLocation from './SearchLocation';\r\nimport WeatherInfo from './WeatherInfo';\r\n\r\nconst Home = () => {\r\n\r\n    const [weather, setWeather] = useState();\r\n    const [error, setError] = useState();\r\n\r\n    const [lat, setLat] = useState(0);\r\n    const [long, setLong] = useState(0);\r\n    const [cLocationData, setCLocationData] = useState('');\r\n\r\n    \r\n    // useEffect(()=>{\r\n    //   const fetchData = async() => {\r\n    //     navigator.geolocation.getCurrentPosition(function(position){\r\n    //       setLat(position.coords.latitude);\r\n    //       setLong(position.coords.longitude);\r\n    //     })\r\n    //     // console.log(\"Latitude is:\", lat)\r\n    //     // console.log(\"Longitude is:\", long)\r\n    //   }  \r\n      \r\n\r\n    //   const currentaURL = `${process.env.REACT_APP_WEATHER_API_URL}/weather?lat=${lat}&lon=${long}&appid=${process.env.REACT_APP_WEATHER_API_KEY}&units=metric`;\r\n    //   await fetch(currentaURL)\r\n    //   .then(res=> res.json())\r\n    //   .then(result =>{\r\n    //     setCLocationData(result);\r\n    //     console.log(result)\r\n    //   })\r\n    //   fetchData();\r\n    // },[lat, long])\r\n\r\n    useEffect(() => {\r\n      const fetchData = async () => {\r\n        navigator.geolocation.getCurrentPosition(function(position) {\r\n          setLat(position.coords.latitude);\r\n          setLong(position.coords.longitude);\r\n        });\r\n  \r\n        await fetch(`${process.env.REACT_APP_WEATHER_API_URL}/weather?lat=${lat}&lon=${long}&appid=${process.env.REACT_APP_WEATHER_API_KEY}&units=metric`)\r\n        .then(res => res.json())\r\n        .then(result => {\r\n          setCLocationData(result)\r\n          // console.log(result);\r\n        });\r\n      }\r\n      fetchData();\r\n    }, [lat,long])\r\n\r\n    // console.log(cLocationData)\r\n\r\n    const api_call = async (e) =>{\r\n        e.preventDefault();\r\n        const location = e.target.elements.location.value;\r\n        if(!location) {\r\n          return setError(\"Please enter a correct location Name\"), setWeather(null)\r\n        }\r\n        \r\n        const baseUrl = `${process.env.REACT_APP_WEATHER_API_URL}/weather?q=${location}&appid=${process.env.REACT_APP_WEATHER_API_KEY}&units=metric`;\r\n        \r\n        const request = axios.get(baseUrl);\r\n        const responce = await request;\r\n\r\n        setWeather(responce.data);\r\n\r\n        e.target.elements.location.value = '';\r\n    }\r\n    \r\n    // console.log(weather.main.temp)\r\n    // console.log(cLocationData.main.temp)\r\n\r\n    \r\n\r\n    return (\r\n    <>\r\n      <Context.Provider value={{api_call, weather, cLocationData}}>\r\n        {error && <Error error={error}/>}\r\n        <SearchLocation />\r\n        <WeatherInfo />\r\n        {/* {weather && <WeatherInfo />} */}\r\n\t\t  </Context.Provider>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default withLayout(Home)"],"mappings":"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"},"metadata":{},"sourceType":"module"}